/**
 * —Ñ—É–Ω–∫—Ü—ñ—è —â–æ–± —Ä–æ–±–∏—Ç–∏ –∑–∞–ø–∏—Ç–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
 * @param {*} url - url –Ω–∞ —è–∫–∏–π –º–∏ —Ä–æ–±–∏–º–æ –∑–∞–ø–∏—Ç
 * @param {*} uploadData - –¥–∞–Ω—ñ —è–∫—ñ –º–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ
 * @returns
 */
export const AJAX = async function (
  url,
  header = undefined,
  uploadData = undefined
) {
  try {
    // —Ç—É—Ç —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∞ –ª–æ–≥—ñ–∫–∞: —è–∫—â–æ –º–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –¥–∞–Ω—ñ, —Ç–æ –º–∏ —Ä–æ–±–∏–º–æ POST –∑–∞–ø–∏—Ç, —è–∫—â–æ –º–∏ –æ—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ, —Ç–æ GET –∑–∞–ø–∏—Ç
    const fetchPro = uploadData
      ? fetch(url, {
          method: "POST",
          body: JSON.stringify(uploadData), //–≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Å–≤–æ—ó –¥–∞–Ω—ñ
        })
      : fetch(url, {
          method: "GET",
        });
    const result = await fetchPro; // —Ç—É—Ç –º–∏ –≤–ª–∞—Å–Ω–µ —á–µ–∫–∞—î–º–æ –Ω–∞ –¥–∞–Ω—ñ
    if (!result.ok) return; // —è–∫—â–æ —â–æ—Å—å –Ω–µ —Ç–∞–∫ –Ω–µ –±—É–¥–µ–º–æ —ó—Ö —Ä–æ–∑–ø–∞–∫–æ–≤—É–≤–∞—Ç–∏(–∑–∞–ø–æ–±—ñ–≥–∞—î–º–æ –≤–∏–∫–ª—é—á–µ–Ω–Ω—é)
    const data = await result.json(); // —Ä–æ–∑–ø–∞–∫–æ–≤—É—î–º–æ –¥–∞–Ω—ñ
    // if (!result.ok) throw new Error(`${data.message} (${result.status}) üòø`); // –∑–Ω–æ–≤—É –∂ —Ç–∞–∫–∏, —è–∫—â–æ —â–æ—Å—å —Ç—Ä–∞–ø–∏–ª–æ—Å—å –∫–∏–Ω–µ–º–æ –ø–æ–º–∏–ª–∫—É
    return data;
  } catch (err) {
    //—Ç—É—Ç –æ–±—Ä–æ–±–ª—è—î–º–æ –ø–æ–º–∏–ª–∫—É
    console.log(err, "üî¥ –ø–æ–º–∏–ª–∫–∞....");
  }
};
